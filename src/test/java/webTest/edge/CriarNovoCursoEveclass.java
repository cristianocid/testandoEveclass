package webTest.edge;
// Generated by Selenium IDE

import io.github.bonigarcia.wdm.WebDriverManager;
import org.apache.commons.io.FileUtils;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.*;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.is;

public class CriarNovoCursoEveclass {

    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    Properties prop = new Properties(); // Cria um objeto Properties

    @BeforeEach
    public void setUp() throws IOException {
        WebDriverManager.edgedriver().setup();
        EdgeOptions options = new EdgeOptions();
        // Configurações adicionais, se necessário
        driver = new EdgeDriver(options);
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); // Espera até que o elemento seja encotrado
        // Carrega o arquivo de propriedades
        FileInputStream file = new FileInputStream("src/test/resources/config.properties");
        prop.load(file);
        file.close();
    }
    @AfterEach
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void testeCriarNovoCurso() throws IOException {
        // Iniciando Teste acessando o site Testando Eveclass
        driver.get("https://testando.eveclass.com/pt");

        // Altera dimensão da tela para visualização
        driver.manage().window().setSize(new Dimension(1580, 840));

        // Aciona o botão "Começar Agora"
        driver.findElement(By.cssSelector(".button-custom:nth-child(4) > .button-text > span > span")).click();

        // Aciona o botão "Entrar"
        driver.findElement(By.cssSelector("#support-action > span > span > span")).click();

        // Lê os valores de e-mail do arquivo de propriedades
        String email = prop.getProperty("email");
        // Lê os valores de senha do arquivo de propriedades
        String senha = prop.getProperty("senha");

        // Seleciona o Input "Email" e inseri os valores
        WebElement inputEmail = driver.findElement(By.cssSelector("input[data-vv-as='Email'][type='Email']"));
        inputEmail.sendKeys(email);

        // Seleciona o Input "password" e inseri os valores
        WebElement inputSenha = driver.findElement(By.cssSelector("input[type='password']"));
        inputSenha.sendKeys(senha);

        // Aciona o botão "Entrar"
        driver.findElement(By.xpath("//*[@id=\"auth-panel\"]/div[2]/div/div/div/div/div[2]/div/form/div[2]/button/span/span")).click();

        // Aciona o botão "Cursos"
        driver.findElement(By.linkText("Cursos")).click();

        // Aciona o botão "Novo Curso"
        driver.findElement(By.xpath("//*[@id=\"scroll-container\"]/div/div/div/div[2]/div[1]/div/div/div[2]/a/span/span/span")).click();

        // Seleciona o elemento de rádio pelo texto da descrição
        WebElement radio = driver.findElement(By.xpath("//h3[contains(text(), 'Módulos')]/ancestor::div[@class='card-radio-option']"));
        radio.click();

        // Aciona o botão "Prosseguir"
        WebElement button = driver.findElement(By.cssSelector("button[class='button  button-default'] i[class='icon-right fas fa-arrow-right']"));
        button.click();

        // Seleciona opção "Cronograma"
        WebElement cronograma = driver.findElement(By.cssSelector("i.far.fa-user-clock"));
        cronograma.click();

        // Aciona o botão "Prosseguir"
        WebElement button2 = driver.findElement(By.cssSelector("button[type='submit']"));
        button2.click();

        // Seleciona o Input "telefone" e inseri os valores
        WebElement inputNome = driver.findElement(By.cssSelector("input[data-vv-as='Nome'][type='text']"));
        inputNome.sendKeys("Teste Novo Curso");

        // Aciona o botão "Salvar"
        WebElement botaoSalvar = driver.findElement(By.xpath("//span[contains(text(), 'Salvar')]"));
        botaoSalvar.click();

        // Verifica se o texto esperado é igual ao texto atual
        assertThat(driver.findElement(By.id("swal2-title")).getText(), is("O curso foi criado!"));

        // Gera um print-screen do final do Teste para verificação
        File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        FileUtils.copyFile(screenshot, new File("src/test/resources/utils/print/evidenciaCriarCursoEdge.png"));
    }
}
